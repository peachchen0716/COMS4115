; ModuleID = 'Pyni'
source_filename = "Pyni"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.4 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.5 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.6 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.7 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %b = alloca i32
  store i32 5, i32* %b
  br label %while

while:                                            ; preds = %while_body, %entry
  %b1 = load i32, i32* %b
  %normal_binop = icmp sge i32 %b1, 0
  br i1 %normal_binop, label %while_body, label %while_end

while_body:                                       ; preds = %while
  %b2 = load i32, i32* %b
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.4, i32 0, i32 0), i32 %b2)
  %b3 = load i32, i32* %b
  %uniop = sub i32 %b3, 1
  store i32 %uniop, i32* %b
  br label %while

while_end:                                        ; preds = %while
  ret i32 0
}
